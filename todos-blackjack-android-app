1. practice mode classes for the next release.....do in kotlin, bottom nav, switch with the tab layouts???
2. lock ui for network call?
3. add module(JAR) to handle non network nec....since only client is android atm
4. rename stuff and package into appropriate packages
5. fix aligment of the buttons 
6. is the 'clever' subclassing overkill?
7. add lifecycle awareness?
8. wire up results button
9.listener cleanup is the vm is the best way in the network to callback?
10. a thing??? Depending on your layout Android can call onStart() even, when your Fragment is not yet visible, but it belongs to a visible parent container. For instance, this is valid for android.support.v4.view.ViewPager which requires you to override Fragment.setUserVisibleHint() method. In any case, if you need to register/unregister BroadcastReceivers or other listeners, you can safely use onStart() and onStop() methods because those will be called always.

Note: Some fragment containers can keep invisible fragments started. To handle this situation you can override Fragment.onHiddenChanged(boolean hidden). According to the documentation, a fragment must be both started and visible (not hidden), to be visible to the user.